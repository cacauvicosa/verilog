$date
	Wed Sep 27 16:52:20 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 8 ! dout [7:0] $end
$var reg 11 " address [10:0] $end
$var reg 1 # clk $end
$var reg 8 $ din [7:0] $end
$var reg 1 % reset $end
$scope module Mycache $end
$var wire 11 & address [10:0] $end
$var wire 1 # clk $end
$var wire 8 ' din [7:0] $end
$var wire 1 % reset $end
$var wire 1 ( v $end
$var wire 6 ) tag [5:0] $end
$var wire 2 * line [1:0] $end
$var wire 1 + c $end
$var wire 3 , blk [2:0] $end
$var wire 1 - Twr $end
$var wire 6 . Tout [5:0] $end
$var wire 1 / Rwr $end
$var wire 8 0 Ram2Cache [7:0] $end
$var wire 3 1 Muxout [2:0] $end
$var wire 1 2 MuxSel $end
$var wire 3 3 Mux1 [2:0] $end
$var wire 1 4 END $end
$var wire 1 5 Dwr $end
$var wire 1 6 Cnt $end
$var wire 8 7 Cache2out [7:0] $end
$var reg 6 8 debug [5:0] $end
$var reg 8 9 dout [7:0] $end
$scope module DataMux $end
$var wire 3 : din_0 [2:0] $end
$var wire 1 2 sel $end
$var wire 3 ; mux_out [2:0] $end
$var wire 3 < din_1 [2:0] $end
$upscope $end
$scope module FSM $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 1 ( v $end
$var wire 1 + c $end
$var wire 1 4 END $end
$var reg 1 6 Cnt $end
$var reg 1 5 Dwr $end
$var reg 1 2 Mux $end
$var reg 1 / Rwr $end
$var reg 1 - Twr $end
$var reg 2 = state [1:0] $end
$upscope $end
$scope module R $end
$var wire 11 > addr [10:0] $end
$var wire 1 # clk $end
$var wire 8 ? din [7:0] $end
$var wire 1 % reset $end
$var wire 1 / wr $end
$var reg 8 @ dout [7:0] $end
$upscope $end
$scope module T $end
$var wire 1 # clk $end
$var wire 6 A din [5:0] $end
$var wire 2 B line [1:0] $end
$var wire 1 % reset $end
$var wire 1 - wr $end
$var reg 6 C dout [5:0] $end
$upscope $end
$scope module V $end
$var wire 1 # clk $end
$var wire 2 D line [1:0] $end
$var wire 1 % reset $end
$var wire 1 - wr $end
$var reg 1 ( dout $end
$upscope $end
$scope module comp $end
$var wire 6 E tag [5:0] $end
$var wire 6 F tag_in [5:0] $end
$var wire 1 + out $end
$upscope $end
$scope module count $end
$var wire 1 # clk $end
$var wire 1 6 reset $end
$var reg 1 4 End $end
$var reg 3 G out [2:0] $end
$upscope $end
$scope module dcache $end
$var wire 3 H blk [2:0] $end
$var wire 1 # clk $end
$var wire 8 I din [7:0] $end
$var wire 2 J line [1:0] $end
$var wire 1 5 wr $end
$var reg 8 K dout [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx K
b0 J
bx I
bx H
bx G
bx F
b0 E
b0 D
bx C
b0 B
b0 A
bx @
b0 ?
b0xxx >
bx =
bx <
bx ;
b0 :
bx 9
bx 8
bx 7
x6
x5
x4
bx 3
x2
bx 1
bx 0
x/
bx .
x-
b0 ,
x+
b0 *
b0 )
0(
b0 '
b0 &
0%
b0 $
0#
b0 "
bx !
$end
#1
04
1#
#2
0#
#3
1#
#4
0#
#5
1#
#6
0#
#7
1#
#8
0#
#9
1#
#10
0#
#11
1#
#12
0#
#13
1#
#14
0#
#15
1#
#16
0#
#17
1#
#18
0#
#19
1#
#20
0#
#21
1#
#22
0#
#23
1#
#24
0#
#25
1#
#26
0#
#27
1#
#28
0#
#29
1#
#30
0+
b1010 0
b1010 @
b1010 I
b11 .
b11 C
b11 F
b0 1
b0 ;
b0 H
b0 >
b0 3
b0 <
b0 G
02
0/
05
0-
16
b0 =
0#
1%
#31
1#
#32
0#
#33
1#
#34
0#
#35
1#
#36
0#
#37
1#
#38
0#
#39
1#
#40
0#
0%
#41
12
15
06
b10 =
1#
#42
0#
#43
b1011 0
b1011 @
b1011 I
bx 7
bx K
b1 1
b1 ;
b1 H
b1 >
b1 3
b1 <
b1 G
1#
#44
0#
#45
b1100 0
b1100 @
b1100 I
b10 1
b10 ;
b10 H
b10 >
b10 3
b10 <
b10 G
1#
#46
0#
#47
b1101 0
b1101 @
b1101 I
bx 7
bx K
b11 1
b11 ;
b11 H
b11 >
b11 3
b11 <
b11 G
1#
#48
0#
#49
b1110 0
b1110 @
b1110 I
b100 1
b100 ;
b100 H
b100 >
b100 3
b100 <
b100 G
1#
#50
0#
#51
b1111 0
b1111 @
b1111 I
bx 7
bx K
b101 1
b101 ;
b101 H
b101 >
b101 3
b101 <
b101 G
1#
#52
0#
#53
b10000 0
b10000 @
b10000 I
b110 1
b110 ;
b110 H
b110 >
b110 3
b110 <
b110 G
1#
#54
0#
#55
b10001 0
b10001 @
b10001 I
bx 7
bx K
b111 1
b111 ;
b111 H
b111 >
b111 3
b111 <
b111 G
1#
#56
0#
#57
b1010 !
b1010 9
b1010 7
b1010 K
b1010 0
b1010 @
b1010 I
02
05
1-
b0 1
b0 ;
b0 H
b11 =
b0 >
b0 3
b0 <
b0 G
14
1#
#58
0#
#59
1+
b1010 0
b1010 @
b1010 I
b0 .
b0 C
b0 F
0-
16
1(
b0 =
b0 >
b0 3
b0 <
b0 G
04
1#
#60
b1111 !
b1111 9
b1111 7
b1111 K
b101 1
b101 ;
b101 H
b101 ,
b101 :
0#
b101 "
b101 &
#61
06
b1 =
1#
#62
0#
#63
b1010 0
b1010 @
b1010 I
16
b0 =
b0 >
b0 3
b0 <
b0 G
1#
#64
0#
#65
06
b1 =
1#
#66
0#
#67
b1010 0
b1010 @
b1010 I
16
b0 =
b0 >
b0 3
b0 <
b0 G
1#
#68
0#
#69
06
b1 =
1#
#70
0#
#71
b1010 0
b1010 @
b1010 I
16
b0 =
b0 >
b0 3
b0 <
b0 G
1#
#72
0#
#73
06
b1 =
1#
#74
0#
#75
b1010 0
b1010 @
b1010 I
16
b0 =
b0 >
b0 3
b0 <
b0 G
1#
#76
0#
#77
06
b1 =
1#
#78
0#
#79
b1010 0
b1010 @
b1010 I
16
b0 =
b0 >
b0 3
b0 <
b0 G
1#
#80
b1011 !
b1011 9
b1011 7
b1011 K
bx 0
bx @
bx I
0+
b1 1
b1 ;
b1 H
b100000 >
b1 )
b1 A
b1 E
b1 ,
b1 :
0#
b100001 "
b100001 &
#81
b1010 !
b1010 9
b1010 7
b1010 K
b0 1
b0 ;
b0 H
12
15
06
b10 =
1#
#82
0#
#83
b1011 !
b1011 9
b1011 7
b1011 K
b1 1
b1 ;
b1 H
b100001 >
b1 3
b1 <
b1 G
1#
#84
0#
#85
b1100 !
b1100 9
b1100 7
b1100 K
b10 1
b10 ;
b10 H
b100010 >
b10 3
b10 <
b10 G
1#
#86
0#
#87
b1101 !
b1101 9
b1101 7
b1101 K
b11 1
b11 ;
b11 H
b100011 >
b11 3
b11 <
b11 G
1#
#88
0#
#89
b1110 !
b1110 9
b1110 7
b1110 K
b100 1
b100 ;
b100 H
b100100 >
b100 3
b100 <
b100 G
1#
#90
0#
#91
b1111 !
b1111 9
b1111 7
b1111 K
b101 1
b101 ;
b101 H
b100101 >
b101 3
b101 <
b101 G
1#
#92
0#
#93
b10000 !
b10000 9
b10000 7
b10000 K
b110 1
b110 ;
b110 H
b100110 >
b110 3
b110 <
b110 G
1#
#94
0#
#95
b10001 !
b10001 9
b10001 7
b10001 K
b111 1
b111 ;
b111 H
b100111 >
b111 3
b111 <
b111 G
1#
#96
0#
#97
bx !
bx 9
bx 7
bx K
02
05
1-
b1 1
b1 ;
b1 H
b11 =
b100000 >
b0 3
b0 <
b0 G
14
1#
#98
0#
#99
1+
b1 .
b1 C
b1 F
0-
16
b0 =
b100000 >
b0 3
b0 <
b0 G
04
1#
#100
0#
#101
06
b1 =
1#
#102
0#
#103
16
b0 =
b100000 >
b0 3
b0 <
b0 G
1#
#104
0#
#105
06
b1 =
1#
#106
0#
#107
16
b0 =
b100000 >
b0 3
b0 <
b0 G
1#
#108
0#
#109
06
b1 =
1#
#110
0#
